// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Song {
  id           Int           @id @default(autoincrement())
  title        String
  artist       String
  album        String?
  duration     Float? // Duration in seconds
  filePath     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  fingerprints Fingerprint[]
  userQueries  UserQuery[]

  @@index([artist, title])
  @@map("songs")
}

model Fingerprint {
  id         Int      @id @default(autoincrement())
  songId     Int
  hashValue  BigInt // The fingerprint hash
  timeOffset Float // Time offset in seconds
  createdAt  DateTime @default(now())
  song       Song     @relation(fields: [songId], references: [id], onDelete: Cascade)

  @@index([hashValue])
  @@index([songId, timeOffset])
  @@map("fingerprints")
}

model UserQuery {
  id               Int      @id @default(autoincrement())
  audioDuration    Float? // Duration of query audio in seconds
  identifiedSongId Int?
  confidenceScore  Float? // Match confidence (0-1)
  processingTime   Float // Processing time in milliseconds
  createdAt        DateTime @default(now())
  identifiedSong   Song?    @relation(fields: [identifiedSongId], references: [id])

  @@map("user_queries")
}
